apiVersion: v1
kind: Service
metadata:
  name: spring-boot-service
spec:
  ports:
    - port: 8080
      targetPort: 8081
      name: http
  selector:
    app: spring-boot-app
  type: NodePort
---
apiVersion: extensions/v1beta1 # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  name: spring-boot-deployment
spec:
  selector:
    matchLabels:
      app: spring-boot-app
  replicas: 1 # tells deployment to run 3 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: spring-boot-app
    spec:
      volumes:
        - name: test-ssl
          secret:
            secretName: test-ssl
      containers:
        - name: esp
          image: gcr.io/endpoints-release/endpoints-runtime:1
          args: [
            "--http_port=8081",
            "--ssl_port=443",
            "--backend=127.0.0.1:8080",
            "--service=test-api.ucic.pe",
            "--rollout_strategy=managed",
          ]
          ports:
            - containerPort: 8081
            - containerPort: 443
          volumeMounts:
            - mountPath: /etc/nginx/ssl
              name: test-ssl
              readOnly: true
        - name: spring-boot-app
          image: gcr.io/testing-ucic/ucic-social-api:latest
          ports:
            - containerPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: spring-boot-ingress
  annotations:
    kubernetes.io/ingress.allow-http: "false"
spec:
  tls:
    - secretName: test-ssl
  backend:
    serviceName: spring-boot-service
    servicePort: 8080